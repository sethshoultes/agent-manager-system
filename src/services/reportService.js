import { v4 as uuidv4 } from 'uuid';

/**
 * Generates a report from agent execution results
 */
export const generateReport = (agentResults, agent, dataSource) => {
  if (!agentResults || !agentResults.success) {
    throw new Error('Invalid agent results');
  }

  return {
    id: uuidv4(),
    name: `Report: ${dataSource.name} - ${new Date().toLocaleDateString()}`,
    description: `Generated by ${agent.name} agent`,
    agentId: agent.id,
    dataSourceId: dataSource.id,
    summary: agentResults.summary || 'No summary available',
    insights: agentResults.insights || [],
    visualizations: agentResults.visualizations || [],
    statistics: agentResults.statistics || {},
    generatedAt: new Date()
  };
};

/**
 * Export report to JSON format
 */
export const exportReportToJson = (report) => {
  const jsonString = JSON.stringify(report, null, 2);
  const blob = new Blob([jsonString], { type: 'application/json' });
  const url = URL.createObjectURL(blob);
  
  const a = document.createElement('a');
  a.href = url;
  a.download = `${report.name.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.json`;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
};